{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_ALPHABET","SORT_BY_LENGTH","SORT_REVERSED","App","useState","goods","setGoods","sortBy","setSortBy","reversed","setReversed","sortGoods","type","sortedGoods","sort","g1","g2","length","reverseSortedGoods","reverse","className","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iOAIaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAmB,WACnBC,EAAiB,SACjBC,EAAgB,WAETC,EAAM,WACjB,MAA0BC,mBAASL,GAAnC,mBAAOM,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAgCJ,oBAAS,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAY,SAACC,GACjB,GAAIA,IAASX,EAAgB,CAC3BO,EAAUP,GACV,IAAMY,EAAc,UAAId,GAAiBe,MACvC,SAACC,EAAIC,GAAL,OAAYD,EAAGE,OAASD,EAAGC,UAG7B,GAAIR,EAAU,CACZ,IAAMS,EAAqBL,EAAYM,UAEvCb,EAASY,QAETV,EAAUP,GACVK,EAASO,QAEFD,IAASZ,GAClBQ,EAAUR,GAERM,EADEG,EACO,YAAIJ,GAAOS,OAAOK,UAElB,YAAId,GAAOS,SAEbF,IAASV,GAClBI,EACE,YAAID,GAAOc,YAgBjB,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACER,KAAK,SACLQ,UAAS,yBAAoBb,IAAWP,GAAoB,YAC5DqB,QAAS,WACPV,EAAUX,IAJd,iCAUA,wBACEY,KAAK,SACLQ,UAAS,4BAAuBb,IAAWN,GAAkB,YAC7DoB,QAAS,WACPV,EAAUV,IAJd,4BAUA,wBACEW,KAAK,SACLQ,UAAS,6BAAwBX,GAAY,YAC7CY,QAAS,WApCfX,GAAaD,GACbE,EAAUT,IAgCN,qBAUCO,GAAuB,KAAXF,EACX,wBACEK,KAAK,SACLQ,UAAU,4BACVC,QAAS,WA1CjBX,GAAY,GACZF,EAAU,IACVF,EAASP,IAqCH,mBASE,gCAGN,6BACGM,EAAMiB,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC/GlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cd8dee2a.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_ALPHABET = 'alphabet';\nconst SORT_BY_LENGTH = 'length';\nconst SORT_REVERSED = 'reversed';\n\nexport const App = () => {\n  const [goods, setGoods] = useState(goodsFromServer);\n  const [sortBy, setSortBy] = useState('');\n  const [reversed, setReversed] = useState(false);\n\n  const sortGoods = (type) => {\n    if (type === SORT_BY_LENGTH) {\n      setSortBy(SORT_BY_LENGTH);\n      const sortedGoods = [...goodsFromServer].sort(\n        (g1, g2) => g1.length - g2.length,\n      );\n\n      if (reversed) {\n        const reverseSortedGoods = sortedGoods.reverse();\n\n        setGoods(reverseSortedGoods);\n      } else {\n        setSortBy(SORT_BY_LENGTH);\n        setGoods(sortedGoods);\n      }\n    } else if (type === SORT_BY_ALPHABET) {\n      setSortBy(SORT_BY_ALPHABET);\n      if (reversed) {\n        setGoods([...goods].sort().reverse());\n      } else {\n        setGoods([...goods].sort());\n      }\n    } else if (type === SORT_REVERSED) {\n      setGoods(\n        [...goods].reverse(),\n      );\n    }\n  };\n\n  const reversedSort = () => {\n    setReversed(!reversed);\n    sortGoods(SORT_REVERSED);\n  };\n\n  const reset = () => {\n    setReversed(false);\n    setSortBy('');\n    setGoods(goodsFromServer);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortBy !== SORT_BY_ALPHABET && 'is-light'}`}\n          onClick={() => {\n            sortGoods(SORT_BY_ALPHABET);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sortBy !== SORT_BY_LENGTH && 'is-light'}`}\n          onClick={() => {\n            sortGoods(SORT_BY_LENGTH);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${!reversed && 'is-light'}`}\n          onClick={() => {\n            reversedSort();\n          }}\n        >\n          Reverse\n        </button>\n\n        {reversed || sortBy !== '' ? (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              reset();\n            }}\n          >\n            Reset\n          </button>\n        ) : <></>}\n      </div>\n\n      <ul>\n        {goods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}