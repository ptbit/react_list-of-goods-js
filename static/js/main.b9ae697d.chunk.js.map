{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_ALPHABET","SORT_BY_LENGTH","App","useState","goods","setGoods","sortBy","setSortBy","reversed","setReversed","useEffect","type","isReversed","sortedGoods","sort","g1","g2","length","a","b","localeCompare","reverse","sortGoods","className","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"0OAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAmB,WACnBC,EAAiB,SAEVC,EAAM,WACjB,MAA0BC,mBAASJ,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAgCJ,oBAAS,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAEAC,qBAAU,YAIV,SAAmBC,GAA2B,IAArBC,EAAoB,wDACrCC,EAAW,UAAOd,GAExB,OAAQY,GACN,KAAKV,EACHY,EAAYC,MACV,SAACC,EAAIC,GAAL,OAAYD,EAAGE,OAASD,EAAGC,UAG7B,MAGF,KAAKjB,EACHa,EAAYC,MAAK,SAACI,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAK3CP,GACFC,EAAYQ,UAGdhB,EAASQ,GAzBTS,CAAUhB,EAAQE,KACjB,CAACA,EAAUF,IAoCd,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEZ,KAAK,SACLY,UAAWC,IAAG,iBACZ,CAAE,WAAYlB,IAAWN,IAC3ByB,QAAS,WACPlB,EAAUP,IALd,iCAWA,wBACEW,KAAK,SACLY,UAAWC,IAAG,oBACZ,CAAE,WAAYlB,IAAWL,IAC3BwB,QAAS,WACPlB,EAAUN,IALd,4BAWA,wBACEU,KAAK,SACLY,UAAWC,IAAG,oBAAqB,CAAE,YAAahB,IAClDiB,QArCa,WACnBhB,GAAaD,IAiCT,qBAQCA,GAAuB,KAAXF,EACX,wBACEK,KAAK,SACLY,UAAU,4BACVE,QA1CI,WACZhB,GAAY,GACZF,EAAU,KAqCJ,mBAOE,gCAGN,6BACGH,EAAMsB,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC3GlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b9ae697d.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState, useEffect } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_ALPHABET = 'alphabet';\nconst SORT_BY_LENGTH = 'length';\n\nexport const App = () => {\n  const [goods, setGoods] = useState(goodsFromServer);\n  const [sortBy, setSortBy] = useState('');\n  const [reversed, setReversed] = useState(false);\n\n  useEffect(() => {\n    sortGoods(sortBy, reversed);\n  }, [reversed, sortBy]);\n\n  function sortGoods(type, isReversed = false) {\n    const sortedGoods = [...goodsFromServer];\n\n    switch (type) {\n      case SORT_BY_LENGTH: {\n        sortedGoods.sort(\n          (g1, g2) => g1.length - g2.length,\n        );\n\n        break;\n      }\n\n      case SORT_BY_ALPHABET:\n        sortedGoods.sort((a, b) => a.localeCompare(b));\n        break;\n      default:\n    }\n\n    if (isReversed) {\n      sortedGoods.reverse();\n    }\n\n    setGoods(sortedGoods);\n  }\n\n  const reversedSort = () => {\n    setReversed(!reversed);\n  };\n\n  const reset = () => {\n    setReversed(false);\n    setSortBy('');\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info',\n            { 'is-light': sortBy !== SORT_BY_ALPHABET })}\n          onClick={() => {\n            setSortBy(SORT_BY_ALPHABET);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success',\n            { 'is-light': sortBy !== SORT_BY_LENGTH })}\n          onClick={() => {\n            setSortBy(SORT_BY_LENGTH);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', { 'is-light': !reversed })}\n          onClick={reversedSort}\n        >\n          Reverse\n        </button>\n\n        {reversed || sortBy !== '' ? (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        ) : <></>}\n      </div>\n\n      <ul>\n        {goods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}